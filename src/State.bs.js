// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function getStateSetter(stateRef, incomingState) {
  stateRef.contents = incomingState;
  
}

function context(state) {
  var internalState = {
    contents: state
  };
  var dispatch = function ($$event) {
    if (typeof $$event === "number") {
      if ($$event === /* NoConfigFound */0) {
        if (state === 0) {
          internalState.contents = /* UserPrompt */1;
        } else {
          internalState.contents = /* Init */0;
        }
      } else {
        internalState.contents = /* Done */2;
      }
      return ;
    }
    switch ($$event.TAG | 0) {
      case /* AddDirs */0 :
          var dirs = $$event._0;
          internalState.contents = {
            TAG: /* Running */0,
            _0: dirs
          };
          return ;
      case /* Start */1 :
          if (state === 0) {
            internalState.contents = {
              TAG: /* Running */0,
              _0: $$event._0
            };
          } else {
            internalState.contents = /* Init */0;
          }
          return ;
      case /* Fail */2 :
          internalState.contents = {
            TAG: /* Error */1,
            _0: $$event._0
          };
          return ;
      
    }
  };
  return {
          state: internalState,
          dispatch: dispatch
        };
}

exports.getStateSetter = getStateSetter;
exports.context = context;
/* No side effect */
